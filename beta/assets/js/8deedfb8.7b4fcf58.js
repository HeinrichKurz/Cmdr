"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(a),k=i,c=d["".concat(m,".").concat(k)]||d[k]||u[k]||l;return a?n.createElement(c,r(r({ref:t},s),{},{components:a})):n.createElement(c,r({ref:t},s))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=k;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},26437:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var n=a(87462),i=(a(67294),a(3905));const l={},r="Changelog",o={type:"mdx",permalink:"/Cmdr/beta/CHANGELOG",source:"@site/pages/CHANGELOG.md",title:"Changelog",description:"v1.12.0",frontMatter:{}},m=[{value:"v1.12.0",id:"v1120",level:2},{value:"v1.11.0",id:"v1110",level:2},{value:"v1.10.0",id:"v1100",level:2},{value:"v1.9.0",id:"v190",level:2},{value:"v1.8.4",id:"v184",level:2},{value:"v1.8.3",id:"v183",level:2},{value:"v1.8.2",id:"v182",level:2},{value:"v1.8.1",id:"v181",level:2},{value:"v1.8.0",id:"v180",level:2},{value:"v1.7.1",id:"v171",level:2},{value:"v1.7.0",id:"v170",level:2},{value:"v1.6.0",id:"v160",level:2},{value:"v1.5.0",id:"v150",level:2},{value:"v1.4.0",id:"v140",level:2},{value:"v1.3.0",id:"v130",level:2},{value:"v1.2.2",id:"v122",level:2},{value:"v1.2.1",id:"v121",level:2},{value:"v1.2.0",id:"v120",level:2},{value:"v1.1.5",id:"v115",level:2},{value:"v1.1.4",id:"v114",level:2},{value:"v1.1.2",id:"v112",level:2}],p={toc:m},s="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(s,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"changelog"},"Changelog"),(0,i.kt)("h2",{id:"v1120"},"v1.12.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"convertTimestamp")," default command, outputs a human-readable timestamp from epoch seconds"),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"positiveInteger"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"nonNegativeInteger"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"byte")," (0-255), ",(0,i.kt)("inlineCode",{parentName:"li"},"digit")," (0-9) built-in types (including respective plural types)"),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"json")," built-in type, takes in a Json string and provides a Luau table"),(0,i.kt)("li",{parentName:"ul"},"Add internal IsServer assertions for ",(0,i.kt)("inlineCode",{parentName:"li"},"RegisterDefaultCommands")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"commandServerScript")),(0,i.kt)("li",{parentName:"ul"},"Add 'tips' to the help command output"),(0,i.kt)("li",{parentName:"ul"},"Make window scroll to bottom on input"),(0,i.kt)("li",{parentName:"ul"},"Make fuzzy finders search the entire string, rather than looking at the start"),(0,i.kt)("li",{parentName:"ul"},"Make autocomplete menu scrollable"),(0,i.kt)("li",{parentName:"ul"},"Fix window not resizing on clear"),(0,i.kt)("li",{parentName:"ul"},"Remove global initialization scripts feature")),(0,i.kt)("h2",{id:"v1110"},"v1.11.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add support for new Roblox CoreGui Chat"),(0,i.kt)("li",{parentName:"ul"},'Add ArgumentOperatorAliases option to types which allows specifying short hands like "me", "others", "all", etc for any type')),(0,i.kt)("h2",{id:"v1100"},"v1.10.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Improve help command"),(0,i.kt)("li",{parentName:"ul"},"Alias command now supports optional arguments"),(0,i.kt)("li",{parentName:"ul"},"Legacy RoStrap support has been removed"),(0,i.kt)("li",{parentName:"ul"},"Command string text size is now capped at 100K"),(0,i.kt)("li",{parentName:"ul"},"Improved error messages when registering commands"),(0,i.kt)("li",{parentName:"ul"},"Improved docs"),(0,i.kt)("li",{parentName:"ul"},"Improved automatic line sizing"),(0,i.kt)("li",{parentName:"ul"},"Fix bug causing var and varSet to yield on require which could make clients fetch server modules too late"),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"run-lines")," command now runs on the client")),(0,i.kt)("h2",{id:"v190"},"v1.9.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Significantly improved the performance of Util.EmulateTabstops for long strings by using a string builder table (~250-350x) (#190)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Allows for long strings to be displayed in the output without a freeze"),(0,i.kt)("li",{parentName:"ul"},"Added column logic to properly align text containing newlines"))),(0,i.kt)("li",{parentName:"ul"},"Fix a new error caused by ",(0,i.kt)("inlineCode",{parentName:"li"},"var")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"varSet")," in places with DataStore access disabled. (#188)"),(0,i.kt)("li",{parentName:"ul"},"Fix incorrect DataStore used by ",(0,i.kt)("inlineCode",{parentName:"li"},"var")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"varSet")," commands."),(0,i.kt)("li",{parentName:"ul"},"Fix incorrect number of arguments passed to ",(0,i.kt)("inlineCode",{parentName:"li"},"AutoComplete"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Validate")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Parse")," on using value operators like ",(0,i.kt)("inlineCode",{parentName:"li"},"**")," and ",(0,i.kt)("inlineCode",{parentName:"li"},".")," (Types)."),(0,i.kt)("li",{parentName:"ul"},"Fix ",(0,i.kt)("inlineCode",{parentName:"li"},"ValidateOnce")," not working on types created with ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.MakeListableType"),"."),(0,i.kt)("li",{parentName:"ul"},"Fix label positioning broke by roblox update"),(0,i.kt)("li",{parentName:"ul"},"Update announce command to check if sender and recipient can chat"),(0,i.kt)("li",{parentName:"ul"},"Added RichText option to Window:AddLine"),(0,i.kt)("li",{parentName:"ul"},"Replace TeleportPartyAsync with TeleportAsync in teleport command"),(0,i.kt)("li",{parentName:"ul"},"Scroll to bottom on typing began")),(0,i.kt)("h2",{id:"v184"},"v1.8.4"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix an error when using function arguments.")),(0,i.kt)("h2",{id:"v183"},"v1.8.3"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"% teamPlayers" prefix was accidentally removed from ',(0,i.kt)("inlineCode",{parentName:"li"},"players")," type, so this adds it back.")),(0,i.kt)("h2",{id:"v182"},"v1.8.2"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix pressing tab doesn't insert space (#149)")),(0,i.kt)("h2",{id:"v181"},"v1.8.1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixes issue with autocomplete in lists"),(0,i.kt)("li",{parentName:"ul"},"Fixes init-run command in unpublished games"),(0,i.kt)("li",{parentName:"ul"},"Fix boolean type erroring given the empty string")),(0,i.kt)("h2",{id:"v180"},"v1.8.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"var")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"var=")," default commands, which act as a persistent key-value store.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Keys can begin with a dot to be per-session only."),(0,i.kt)("li",{parentName:"ul"},"Keys can begin with a $ to be game-wide, shared among all players."),(0,i.kt)("li",{parentName:"ul"},"Keys can begin with $. to be game-wide and per-session."))),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"fetch")," command, which fetches and returns data from the Internet."),(0,i.kt)("li",{parentName:"ul"},"Generalize the ",(0,i.kt)("inlineCode",{parentName:"li"},"*"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"."),", ",(0,i.kt)("inlineCode",{parentName:"li"},"?"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"?N")," operators from the player type for all types.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Adds a ",(0,i.kt)("inlineCode",{parentName:"li"},"Default"),' function to types to determine their "default" value, this maps to ',(0,i.kt)("inlineCode",{parentName:"li"},".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*")," is determined by calling the ",(0,i.kt)("inlineCode",{parentName:"li"},"Autocomplete")," function with an empty string"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"?")," is a single random value from the above;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"?N")," represents a list of N random values;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"**")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"*")," (all) minus ",(0,i.kt)("inlineCode",{parentName:"li"},"."),' (default), which is commonly referred to as "others" in the ',(0,i.kt)("inlineCode",{parentName:"li"},"player")," type"))),(0,i.kt)("li",{parentName:"ul"},"Fix client side validation to disallow sending commands with incomplete arguments"),(0,i.kt)("li",{parentName:"ul"},"New commands ",(0,i.kt)("inlineCode",{parentName:"li"},"json-array-encode")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"json-array-decode")),(0,i.kt)("li",{parentName:"ul"},"New command ",(0,i.kt)("inlineCode",{parentName:"li"},"resolve"),", which resolves the argument value operators into lists."),(0,i.kt)("li",{parentName:"ul"},"New commands ",(0,i.kt)("inlineCode",{parentName:"li"},"len"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"pick"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"rand"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run")," now has an alias: ",(0,i.kt)("inlineCode",{parentName:"li"},">")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"replace")," now has an alias: ",(0,i.kt)("inlineCode",{parentName:"li"},"//")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run")," command now supports multiple commands delimited by ",(0,i.kt)("inlineCode",{parentName:"li"},"&&"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Slot operator allows you to insert the output of the previous command in a chain of commands separated by ",(0,i.kt)("inlineCode",{parentName:"li"},"&&"),". For example: ",(0,i.kt)("inlineCode",{parentName:"li"},"> echo evaera && kill ||")," (evaera dies)"))),(0,i.kt)("li",{parentName:"ul"},"New command ",(0,i.kt)("inlineCode",{parentName:"li"},"edit")," allows you to edit text within a text area"),(0,i.kt)("li",{parentName:"ul"},"New ",(0,i.kt)("inlineCode",{parentName:"li"},"join")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"map")," commands"),(0,i.kt)("li",{parentName:"ul"},"New ",(0,i.kt)("inlineCode",{parentName:"li"},"goto-place"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"follow-player"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"rejoin"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"get-player-place-instance")," commands."),(0,i.kt)("li",{parentName:"ul"},"New ",(0,i.kt)("inlineCode",{parentName:"li"},"refresh")," command."),(0,i.kt)("li",{parentName:"ul"},"New ",(0,i.kt)("inlineCode",{parentName:"li"},"uptime")," command."),(0,i.kt)("li",{parentName:"ul"},"Cmdr no longer removes preceding skipped arguments (",(0,i.kt)("inlineCode",{parentName:"li"},'""'),") when using AutoComplete on a later argument (#104)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GetCommandsAsStrings")," has been renamed to ",(0,i.kt)("inlineCode",{parentName:"li"},"GetCommandNames"),"; old name still works for backwards compatibility")),(0,i.kt)("h2",{id:"v171"},"v1.7.1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Handle non-string error values correctly")),(0,i.kt)("h2",{id:"v170"},"v1.7.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cmdr now calls tostring on error objects emitted from commands (#144)"),(0,i.kt)("li",{parentName:"ul"},"Cmdr now includes the full trace back in error messages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eryn.io/Cmdr/guide/MetaCommands.html#alias"},"Aliases can now include type checking and name information in arguments")," (#56)"),(0,i.kt)("li",{parentName:"ul"},'New default command: "me". Displays the current player\'s name.'),(0,i.kt)("li",{parentName:"ul"},"Make ",(0,i.kt)("inlineCode",{parentName:"li"},"bring")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"to")," commands built-in aliases for ",(0,i.kt)("inlineCode",{parentName:"li"},"teleport"),". ",(0,i.kt)("inlineCode",{parentName:"li"},"to")," has effectively moved from the ",(0,i.kt)("inlineCode",{parentName:"li"},"DefaultDebug")," group to the ",(0,i.kt)("inlineCode",{parentName:"li"},"DefaultAdmin")," group. (#115)"),(0,i.kt)("li",{parentName:"ul"},"The default activation key is now ",(0,i.kt)("kbd",null,"F2"))),(0,i.kt)("h2",{id:"v160"},"v1.6.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add random selector for player type (#122)"),(0,i.kt)("li",{parentName:"ul"},"Fixed so TextBox is not selectable using controller (#124)"),(0,i.kt)("li",{parentName:"ul"},"Fixed AutoExec commands being executed multiple times (#127)"),(0,i.kt)("li",{parentName:"ul"},"Added configurable hide on lost focus behavior (#129)"),(0,i.kt)("li",{parentName:"ul"},"Added version command (#130)"),(0,i.kt)("li",{parentName:"ul"},"Fix Window auto complete cursor positions (#141)"),(0,i.kt)("li",{parentName:"ul"},"Add CommandContext:HasImplementation (#138)"),(0,i.kt)("li",{parentName:"ul"},"Commands will no longer run in-game if no BeforeRun hook is configured (#132)")),(0,i.kt)("h2",{id:"v150"},"v1.5.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Adds AutoComplete IsPartial (#103)"),(0,i.kt)("li",{parentName:"ul"},"Added dynamic argument types (#93)"),(0,i.kt)("li",{parentName:"ul"},"Allow type inlining in command defs"),(0,i.kt)("li",{parentName:"ul"},"Duration type now allows negative values"),(0,i.kt)("li",{parentName:"ul"},"Fix a bug where sparse values in value list caused dropped arguments"),(0,i.kt)("li",{parentName:"ul"},"Added default command: respawn (#113)")),(0,i.kt)("h2",{id:"v140"},"v1.4.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add support for ",(0,i.kt)("inlineCode",{parentName:"li"},"ClientRun")," (#97).")),(0,i.kt)("h2",{id:"v130"},"v1.3.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"Prefixes")," to Types"),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"Registry:RegisterTypePrefix")),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"Registry:RegisterTypeAlias")),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"override")," parameter to ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.MakeListableType"))),(0,i.kt)("h2",{id:"v122"},"v1.2.2"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Make new lines work in command window. (#84)")),(0,i.kt)("h2",{id:"v121"},"v1.2.1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix bug where Data did not get sent correctly (#85)")),(0,i.kt)("h2",{id:"v120"},"v1.2.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"others")," shorthand for players type"),(0,i.kt)("li",{parentName:"ul"},"Added APIs for showing and hiding the Cmdr window explicitly"),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"CmdrClient:SetActivationUnlocksMouse")," for freeing mouse upon activation")),(0,i.kt)("h2",{id:"v115"},"v1.1.5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Empty quoted sequences (",(0,i.kt)("inlineCode",{parentName:"li"},'""'),") can now be used to skip arguments which have default values")),(0,i.kt)("h2",{id:"v114"},"v1.1.4"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix an issue where the ",(0,i.kt)("inlineCode",{parentName:"li"},"filter")," argument of ",(0,i.kt)("inlineCode",{parentName:"li"},"RegisterDefaultCommands")," was nonfunctional.")),(0,i.kt)("h1",{id:"v113"},"v1.1.3"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fix an issue where the arrow keys could be used to open auto complete when the menu is closed (#62)"),(0,i.kt)("li",{parentName:"ul"},"Make AutoExec commands only run on the client (#61)")),(0,i.kt)("h2",{id:"v112"},"v1.1.2"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Command history")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Up/down arrow now traverses command history when you haven't entered any text."),(0,i.kt)("li",{parentName:"ul"},"New ",(0,i.kt)("inlineCode",{parentName:"li"},"history")," utility command which dynamically returns your previously-entered commands based on a number index."),(0,i.kt)("li",{parentName:"ul"},"New alias ",(0,i.kt)("inlineCode",{parentName:"li"},"! <number>")," to re-run previous commands.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"! -1")," re-reruns your last command."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"! 2")," re-runs your second command."))),(0,i.kt)("li",{parentName:"ul"},"New alias ",(0,i.kt)("inlineCode",{parentName:"li"},"!!")," to re-run your last command."),(0,i.kt)("li",{parentName:"ul"},"New alias ",(0,i.kt)("inlineCode",{parentName:"li"},"^ <search> <replace>")," to re-run your last command with string substitution, replacing ",(0,i.kt)("inlineCode",{parentName:"li"},"search")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"replace"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"New utility commands")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"history")," (see above)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"position [player]"),": Returns the Vector3 position of a player (or yourself if omitted) as a string ",(0,i.kt)("inlineCode",{parentName:"li"},"X,Y,Z"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"replace <haystack> <needle> <replacement>"),": Substitutes text inside ",(0,i.kt)("inlineCode",{parentName:"li"},"haystack")," matching Lua pattern ",(0,i.kt)("inlineCode",{parentName:"li"},"needle")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"replacement"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"discard <command string>"),": Identical to ",(0,i.kt)("inlineCode",{parentName:"li"},"run"),", except the return value is discarded (always returns ",(0,i.kt)("inlineCode",{parentName:"li"},'""'),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clear"),": Clears the console")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"New default types")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Plural primitives (strings, numbers, integers, booleans)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Plural")," types simply resolve into an array of the named type."))),(0,i.kt)("li",{parentName:"ul"},"brickColor(s)"),(0,i.kt)("li",{parentName:"ul"},"teamColor(s): Resolve into a BrickColor based on the color of a Team"),(0,i.kt)("li",{parentName:"ul"},"color3(s)"),(0,i.kt)("li",{parentName:"ul"},"hexColor3(s): Resolve into a Color3 from a hexadecimal color"),(0,i.kt)("li",{parentName:"ul"},"brickColor3(s): Resolve into a Color3 from a BrickColor"),(0,i.kt)("li",{parentName:"ul"},"vector3(s), vector(2)s"),(0,i.kt)("li",{parentName:"ul"},"duration(s): Resolve human-readable times like 20Minutes, 2Hours, 1Year into a number of seconds.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Usage improvements")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cmdr now supports escape sequences",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\\\")," for escaping a literal backslash"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'\\"')," and ",(0,i.kt)("inlineCode",{parentName:"li"},"\\'")," for escaping quotes inside of strings"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\t"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Tab stops display as expected when ",(0,i.kt)("inlineCode",{parentName:"li"},"\\t")," is present in a line on the console"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\n"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"New lines are not displayed in the console as of right now and are displayed as a space. However, ",(0,i.kt)("inlineCode",{parentName:"li"},"\\n")," literals may still be useful for custom commands."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\xA9")," (2-digit) and ",(0,i.kt)("inlineCode",{parentName:"li"},"\\u2661")," (4-digit) hexadecimal unicode escapes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\\$")," for escaping argument replacements and embedded commands in command strings ",(0,i.kt)("em",{parentName:"li"},"only"),"."),(0,i.kt)("li",{parentName:"ul"},"Invalid escape sequences are left in-place."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"help")," command now lists command aliases"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"teleport")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"to")," now accept a Vector3 with the ",(0,i.kt)("inlineCode",{parentName:"li"},"@")," prefix")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"API Improvements and Changes")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cmdr now enforces that types begin with a lowercase letter or digit for consistency."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Dispatcher:RegisterHooksIn"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RegisterTypesIn"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"RegisterCommandsIn")," now allow nesting via folders."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Dispatcher:AddHook")," has been renamed to ",(0,i.kt)("inlineCode",{parentName:"li"},"Dispatcher:RegisterHook"),". The old name still exists as a fallback, but is undocumented and may be removed in the future."),(0,i.kt)("li",{parentName:"ul"},"Cmdr now throws an error if a command has both ",(0,i.kt)("inlineCode",{parentName:"li"},"Data")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Run")," (not a bug, but if someone is doing this then they are confused)"),(0,i.kt)("li",{parentName:"ul"},"Hooks now have an optional third parameter ",(0,i.kt)("inlineCode",{parentName:"li"},"priority"),". Hooks run in order of priority; lower numbers run first. The default priority is ",(0,i.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,i.kt)("li",{parentName:"ul"},"CommandContexts now have an empty ",(0,i.kt)("inlineCode",{parentName:"li"},"State")," table. This is intended to be used in combination with the ",(0,i.kt)("inlineCode",{parentName:"li"},"BeforeRun")," hook to allow you to add custom information to this command that you can consume inside of your command logic or other hooks.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example, if you want many commands to have different behavior based on someone's rank, you can add their rank in the ",(0,i.kt)("inlineCode",{parentName:"li"},"State")," table for your commands to consume and branch off of."))),(0,i.kt)("li",{parentName:"ul"},"New function ",(0,i.kt)("inlineCode",{parentName:"li"},"CmdrClient:SetMashToEnable(true)")," to enable ",(0,i.kt)("em",{parentName:"li"},"Mash to Enable")," mode, which requires the player to press the activation key 7 times in quick succession to open the Cmdr menu for the first time. This is not meant as a security feature, but rather as a way to ensure that the console is not accidentally obtrusive to regular players of your game."),(0,i.kt)("li",{parentName:"ul"},"New client-only function ",(0,i.kt)("inlineCode",{parentName:"li"},"Dispatcher:GetHistory()")," to get an array of the local user's command history. This only includes commands actually typed by the user, no embedded or programmatically run commands."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Dispatcher:EvaluateAndRun")," now accepts an options table in the third parameter rather than Data."),(0,i.kt)("li",{parentName:"ul"},"Automatic Execution: Commands can now contain an ",(0,i.kt)("inlineCode",{parentName:"li"},"AutoExec")," table which contains commands to execute immediately as the command is registered.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is useful for registering aliases associated with your command or initializing state."),(0,i.kt)("li",{parentName:"ul"},"Commands listed in AutoExec are deferred until the end of the Lua cycle, which eliminates any possibility of ordering issues caused by commands being registered out of order.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Utility methods")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Util.MakeEnumType")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.MakeFuzzyFinder")," now accept ",(0,i.kt)("inlineCode",{parentName:"li"},"Enum"),"s and arrays of tables with a ",(0,i.kt)("inlineCode",{parentName:"li"},"Name")," key. (These functions can already accept: array of strings, array of Instances, array of EnumItems, or a single Instance whose children are used)."),(0,i.kt)("li",{parentName:"ul"},"New functions ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.Map")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.Each")," for mapping values of an array and tuple respectively."),(0,i.kt)("li",{parentName:"ul"},"New function ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.MakeSequenceType")," for quickly creating a type that contains a value sequence, like Vector3 or Color3. The delimeter can be either ",(0,i.kt)("inlineCode",{parentName:"li"},",")," or whitespace, checking ",(0,i.kt)("inlineCode",{parentName:"li"},",")," first."),(0,i.kt)("li",{parentName:"ul"},"New functions ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.SplitPrioritizedDelimeter"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.ParseEscapeSequences"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"Util.EmulateTabstops"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bug fixes")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"announce")," command text is now filtered through chat filter"),(0,i.kt)("li",{parentName:"ul"},"Added an additional check that RoStrap is being used to help prevent false positives"),(0,i.kt)("li",{parentName:"ul"},"Fixed a bug preventing command data from being accessible")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"roblox-ts npm package")),(0,i.kt)("p",null,"Cmdr is now available as an ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/rbx-cmdr"},"npm package")," for usage in ",(0,i.kt)("a",{parentName:"p",href:"https://roblox-ts.github.io/"},"roblox-ts"),"."))}d.isMDXComponent=!0}}]);